[hppm_proc.py]
psyon=0
#set to 1 to use TCP interface module
use_tcp=0
#the IP of the TCP server to connect to
tcp_server=127.0.0.1
#TCP port to use
tcp_port=10489
#set to 1 to use the Arudino interface module
use_ard_int=1
com=COM4
#set to 1 to use the OSC server module
#ignored if use_ard_int=0
#use this to listen to OSC even if the gstreamer
#module points to the localhost OSC server
#because in that case it will not use OSC to communicate
use_osc_server=1
#the IP you want to bind OSC server to
#if set to 0 it tries to discover a useful IP
#use 127.0.0.1 for localhost
bind_ip=127.0.0.1
#port to bind OSC server to
bind_port=10233
#set to 1 to use the gstreamer/OSC client  module 
use_gstreamer=0
#IP to connect OSC client to
#use 127.0.0.1 for localhost
remote_osc_server=127.0.0.1
#port to connect OSC client to
remote_osc_port=10233
#gstreamer audio device, set to 0 to autodetect
#for windows use gst-device-monitor-1.0 and use
# the part after wasapisink device=
aud_dev_name=0
#dB to adjust the signal by before spectrum processing
low_db_adj=24
mid_db_adj=24
high_db_adj=24
#logistic shift that LEDs are adjusted by
low_led_log_shift=.5
mid_led_log_shift=.5
high_led_log_shift=.5
#logistic stretch factor that LEDs are adjusted by
low_led_log_stretch=10
mid_led_log_stretch=10
high_led_log_stretch=10
#amount to adjust the LED level by
low_led_adj=0
mid_led_adj=0
high_led_adj=0
#minimum/maxiumum low frequency or None
min_low_freq=None
max_low_freq=125
#minimum/maximum mid frequency or None
min_mid_freq=350
max_mid_freq=1500
#minimum/maxiumum high frequency or None
min_high_freq=6000
max_high_freq=None
#set to 10* desired fade speed of wave mode, 0 is off, 20 works best for 64 lights, 110 for 11
fadeR=15
fadeG=15
fadeB=15
#0, lights off on shutdown 1, lights on on shutdown
lightOn=1
#if you send data in wave mode faster than the wave speed
chngBProp=1
#you can either display that data right away on the wave start pixel, 1
#or discard that data, 0
#this is for the random walk set you can control your color set with this
#very simple implementation for now may make color changes smoother later
minrwR=0
maxrwR=127
minrwG=0
maxrwG=127
minrwB=0
maxrwB=127

#incoming number of values per second per channel, should match max
datar=60
#these are the pixel values where waves will start
dpR=11
dpG=25
dpB=40
#set these to 1 to randomize the pixel that color waves start on
rpR=0
rpG=0
rpB=0
#if set to 1 all colors will use the pixel location for G
srp=0
#framerate to output to arduino; 0, flow control limited
outr=0
#arduino framerate limit, may overload buffer, 0-255, 0 is no limiting
fps=0
#set to LPD8806, LPD8806v2 (swaps G and B) or WS2801, the strand type you have
sType=LPD8806
#number of lights you have
#numLights=11
numLights=52
#a single strand of 32 lights strips is capable of addressing 65536 lights
#however the atmega238 only has memory for just over 64? lights in wave mode
#using the normal sketch and ? lights using the extended sketch
#the atmega2560 has memory for 313 lights in wave mode using the normal
#sketch and ? lights in wave mode using the extended sketch
#if you get an something with more memory you need to update the arduino code
#DI connects to pin 11 (or 51 if you have a Mega)
#CI connects to pin 13 (or 52 if you have a Mega)

#if for some reason you are running without the max part you can set the initial mode here
#this sets wavemode 0 off 1 on
woR=1
woG=1
woB=1
#these set the main mode
#0 listen for audio
#1 test colors interlaced
#2 test colors sequentially
#3 random color walk
mR=0
mG=0
mB=0
#this is the wave speed delays max 255ms (251 if you want to stay in pixel sync)
wsR=0
wsG=0
wsB=0
#nagios settings
use_nagios=0
nagios_user=nagiosUser
nagios_pass=nagiosPassword
nagios_status_uri=https://nagiosserver.example.com/nagios/cgi-bin/statusjson.cgi
# these control the nagios coloras
rBrightR=50
rBrightG=0
rBrightB=0
gBrightR=0
gBrightG=50
gBrightB=0
bBrightR=0
bBrightG=0
bBrightB=50
# level at and below which is frame is considered quiet
nagQuietThreshR=4
nagQuietThreshG=2
nagQuietThreshB=2
# frames after which nagios activates
# each color is a separate frame so if outr=60
# nagQuietFrames=60*3*10 = 10s
nagQuietFrames=180
# show the R G B values, useful for setting QuietThresh
showRGBLevels=1
# comma separated list of bands to mute, useful for buzz
# including None will turn off all muting
mute_bands=0,1,None
# show bands that aren't quiet, useful for figureing out which to mute
show_bands=0

